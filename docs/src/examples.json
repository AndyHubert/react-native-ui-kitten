[
  {
    "code": "import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { Avatar } from 'react-native-ui-kitten';\n\nexport const AvatarInlineStylingShowcase = () => {\n\n  return (\n    <View style={styles.container}>\n      <Avatar\n        style={styles.avatar}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  avatar: {\n    width: 96,\n    height: 96,\n    borderRadius: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/avatar/avatarInlineStyling.component.tsx",
    "name": "AvatarInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { Avatar } from 'react-native-ui-kitten';\n\nexport const AvatarRemoteImagesShowcase = () => {\n\n  return (\n    <View style={styles.container}>\n      <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}/>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/avatar/avatarRemoteImages.component.tsx",
    "name": "AvatarRemoteImages"
  },
  {
    "code": "import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { Avatar } from 'react-native-ui-kitten';\n\nexport const AvatarShapeShowcase = () => {\n\n  return (\n    <View style={styles.container}>\n      <Avatar\n        shape='round'\n        style={styles.item}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n      <Avatar\n        shape='rounded'\n        style={styles.item}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n      <Avatar\n        shape='square'\n        style={styles.item}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  item: {\n    marginBottom: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/avatar/avatarShape.component.tsx",
    "name": "AvatarShape"
  },
  {
    "code": "import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { Avatar } from 'react-native-ui-kitten';\n\nexport const AvatarSimpleUsageShowcase = () => {\n\n  return (\n    <View style={styles.container}>\n      <Avatar source={require('../../../../assets/brand-logo.png')}/>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/avatar/avatarSimpleUsage.component.tsx",
    "name": "AvatarSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { Avatar } from 'react-native-ui-kitten';\n\nexport const AvatarSizeShowcase = () => {\n\n  return (\n    <View style={styles.container}>\n      <Avatar\n        size='tiny'\n        style={styles.item}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n      <Avatar\n        size='small'\n        style={styles.item}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n      <Avatar\n        size='medium'\n        style={styles.item}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n      <Avatar\n        size='large'\n        style={styles.item}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n      <Avatar\n        size='giant'\n        style={styles.item}\n        source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  item: {\n    marginBottom: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/avatar/avatarSize.component.tsx",
    "name": "AvatarSize"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Select,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class ButtonAppearanceShowcase extends React.Component {\n\n  state = {\n    appearance: { text: 'filled' },\n  };\n\n  appearances = [\n    { text: 'filled' },\n    { text: 'outline' },\n    { text: 'ghost' },\n  ];\n\n  setAppearance = (appearance) => {\n    this.setState({ appearance });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.appearances}\n          label='Select Button Appearance'\n          style={styles.select}\n          selectedOption={this.state.appearance}\n          onSelect={this.setAppearance}\n        />\n        <Button\n          style={styles.button}\n          appearance={this.state.appearance.text}\n          status='primary'>\n          BUTTON\n        </Button>\n        <Button\n          style={styles.button}\n          appearance={this.state.appearance.text}\n          status='success'>\n          BUTTON\n        </Button>\n        <Button\n          style={styles.button}\n          appearance={this.state.appearance.text}\n          status='info'>\n          BUTTON\n        </Button>\n        <Button\n          style={styles.button}\n          appearance={this.state.appearance.text}\n          status='warning'>\n          BUTTON\n        </Button>\n        <Button\n          style={styles.button}\n          appearance={this.state.appearance.text}\n          status='danger'>\n          BUTTON\n        </Button>\n        <Button\n          style={styles.button}\n          appearance={this.state.appearance.text}\n          status='basic'>\n          BUTTON\n        </Button>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  select: {\n    marginBottom: 24,\n  },\n  button: {\n    marginBottom: 10,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/button/buttonAppearance.component.tsx",
    "name": "ButtonAppearance"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Image,\n} from 'react-native';\nimport { Button } from 'react-native-ui-kitten';\n\nexport const ButtonIconShowcase = () => {\n\n  const renderIcon = (style) => {\n    return (\n      <Image\n        source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n        style={style}\n      />\n    );\n  };\n\n  return (\n    <View>\n      <Button\n        icon={renderIcon}\n        style={styles.button}>\n        BUTTON\n      </Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    marginBottom: 10,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/button/buttonIcon.component.tsx",
    "name": "ButtonIcon"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { Button } from 'react-native-ui-kitten';\n\nexport const ButtonSimpleUsageShowcase = () => {\n  return (\n    <View>\n      <Button style={styles.button}>BUTTON</Button>\n      <Button style={styles.button} disabled>BUTTON</Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    marginBottom: 10,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/button/buttonSimpleUsage.component.tsx",
    "name": "ButtonSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { Button } from 'react-native-ui-kitten';\n\nexport const ButtonSizeShowcase = () => {\n  return (\n    <View style={styles.container}>\n      <Button style={styles.button} size='tiny'>BUTTON</Button>\n      <Button style={styles.button} size='small'>BUTTON</Button>\n      <Button style={styles.button} size='medium'>BUTTON</Button>\n      <Button style={styles.button} size='large'>BUTTON</Button>\n      <Button style={styles.button} size='giant'>BUTTON</Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  button: {\n    marginBottom: 10,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/button/buttonSize.component.tsx",
    "name": "ButtonSize"
  },
  {
    "code": "import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { Button } from 'react-native-ui-kitten';\n\nexport const ButtonStatusShowcase = () => {\n  return (\n    <View style={styles.container}>\n      <Button style={styles.button} status='primary'>BUTTON</Button>\n      <Button style={styles.button} status='success'>BUTTON</Button>\n      <Button style={styles.button} status='info'>BUTTON</Button>\n      <Button style={styles.button} status='warning'>BUTTON</Button>\n      <Button style={styles.button} status='danger'>BUTTON</Button>\n      <Button style={styles.button} status='basic'>BUTTON</Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  button: {\n    marginBottom: 10,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/button/buttonStatus.component.tsx",
    "name": "ButtonStatus"
  },
  {
    "code": "import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport const CheckboxInlineStylingShowcase = () => {\n  const [checked, onChange] = useState(false);\n\n  const onStateChange = (value): void => {\n    onChange(value);\n  };\n\n  return (\n    <View style={styles.container}>\n      <CheckBox\n        checked={checked}\n        text='This is Checkbox Component'\n        textStyle={styles.text}\n        onChange={onStateChange}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  text: {\n    color: 'green',\n    fontSize: 20,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/checkbox/checkboxInlineStyling.component.tsx",
    "name": "CheckboxInlineStyling"
  },
  {
    "code": "import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport const CheckboxSimpleUsageShowcase = (): React.ReactElement => {\n  const [checked1, onChange1] = useState(false);\n  const [checked2, onChange2] = useState(false);\n  const [checked3, onChange3] = useState(false);\n\n  const onStateChange = (value: boolean, index: number): void => {\n    switch (index) {\n      case 1:\n        onChange1(value);\n        break;\n      case 2:\n        onChange2(value);\n        break;\n      case 3:\n        onChange3(value);\n        break;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <CheckBox\n        style={styles.checkbox}\n        checked={checked1}\n        onChange={(value: boolean) => onStateChange(value, 1)}\n      />\n      <CheckBox\n        style={styles.checkbox}\n        disabled\n        checked={checked2}\n        onChange={(value: boolean) => onStateChange(value, 2)}\n      />\n      <CheckBox\n        style={styles.checkbox}\n        indeterminate={true}\n        checked={checked3}\n        onChange={(value: boolean) => onStateChange(value, 3)}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  checkbox: {\n    marginBottom: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/checkbox/checkboxSimpleUsage.component.tsx",
    "name": "CheckboxSimpleUsage"
  },
  {
    "code": "import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport const CheckboxStatusShowcase = (): React.ReactElement => {\n  const [checked1, onChange1] = useState(false);\n  const [checked2, onChange2] = useState(false);\n  const [checked3, onChange3] = useState(false);\n  const [checked4, onChange4] = useState(false);\n  const [checked5, onChange5] = useState(false);\n  const [checked6, onChange6] = useState(false);\n\n  const onStateChange = (value: boolean, index: number): void => {\n    switch (index) {\n      case 1:\n        onChange1(value);\n        break;\n      case 2:\n        onChange2(value);\n        break;\n      case 3:\n        onChange3(value);\n        break;\n      case 4:\n        onChange4(value);\n        break;\n      case 5:\n        onChange5(value);\n        break;\n      case 6:\n        onChange6(value);\n        break;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <CheckBox\n        style={styles.checkbox}\n        status='primary'\n        checked={checked1}\n        onChange={(value: boolean) => onStateChange(value, 1)}\n      />\n      <CheckBox\n        style={styles.checkbox}\n        status='success'\n        checked={checked2}\n        onChange={(value: boolean) => onStateChange(value, 2)}\n      />\n      <CheckBox\n        style={styles.checkbox}\n        status='info'\n        checked={checked3}\n        onChange={(value: boolean) => onStateChange(value, 3)}\n      />\n      <CheckBox\n        style={styles.checkbox}\n        status='warning'\n        checked={checked4}\n        onChange={(value: boolean) => onStateChange(value, 4)}\n      />\n      <CheckBox\n        style={styles.checkbox}\n        status='danger'\n        checked={checked5}\n        onChange={(value: boolean) => onStateChange(value, 5)}\n      />\n      <CheckBox\n        style={styles.checkbox}\n        status='basic'\n        checked={checked6}\n        onChange={(value: boolean) => onStateChange(value, 6)}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  checkbox: {\n    marginBottom: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/checkbox/checkboxStatus.component.tsx",
    "name": "CheckboxStatus"
  },
  {
    "code": "import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport const CheckboxTextShowcase = () => {\n  const [checked, onChange] = useState(false);\n\n  const onStateChange = (value): void => {\n    onChange(value);\n  };\n\n  return (\n    <View style={styles.container}>\n      <CheckBox\n        checked={checked}\n        text='This is Checkbox Component'\n        onChange={onStateChange}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/checkbox/checkboxText.component.tsx",
    "name": "CheckboxText"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputInlineStylingShowcase extends React.Component {\n\n  state = {\n    inputValue: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.inputValue}\n        style={styles.input}\n        textStyle={styles.inputText}\n        labelStyle={styles.inputLabel}\n        captionTextStyle={styles.inputCaption}\n        onChangeText={this.onChangeText}\n        label='LABEL'\n        caption='CAPTION'\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  input: { borderRadius: 8 },\n  inputText: { color: 'purple' },\n  inputLabel: { color: 'purple' },\n  inputCaption: { color: 'purple' },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/input/inputInlineStyling.component.tsx",
    "name": "InputInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputSimpleUsageShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/input/inputSimpleUsage.component.tsx",
    "name": "InputSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { Layout, Input } from 'react-native-ui-kitten';\n\nexport class InputSizeShowcase extends React.Component {\n\n  state = {\n    smallValue: '',\n    mediumValue: '',\n    largeValue: '',\n  };\n\n  onSmallTextChange = (smallValue) => {\n    this.setState({ smallValue });\n  };\n\n  onMediumTextChange = (mediumValue) => {\n    this.setState({ mediumValue });\n  };\n\n  onLargeTextChange = (largeValue) => {\n    this.setState({ largeValue });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Input\n          size='small'\n          placeholder='Small'\n          value={this.state.smallValue}\n          onChangeText={this.onSmallTextChange}\n        />\n        <Input\n          size='medium'\n          placeholder='Medium'\n          value={this.state.mediumValue}\n          onChangeText={this.onMediumTextChange}\n        />\n        <Input\n          size='large'\n          placeholder='Large'\n          value={this.state.largeValue}\n          onChangeText={this.onLargeTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/input/inputSize.component.tsx",
    "name": "InputSize"
  },
  {
    "code": "import React from 'react';\nimport { Layout, Input } from 'react-native-ui-kitten';\n\nexport class InputStatusShowcase extends React.Component {\n\n  state = {\n    primaryValue: '',\n    successValue: '',\n    infoValue: '',\n    warningValue: '',\n    dangerValue: '',\n    basicValue: '',\n  };\n\n  onPrimaryTextChange = (primaryValue) => {\n    this.setState({ primaryValue });\n  };\n\n  onSuccessTextChange = (successValue) => {\n    this.setState({ successValue });\n  };\n\n  onInfoTextChange = (infoValue) => {\n    this.setState({ infoValue });\n  };\n\n  onWarningTextChange = (warningValue) => {\n    this.setState({ warningValue });\n  };\n\n  onDangerTextChange = (dangerValue) => {\n    this.setState({ dangerValue });\n  };\n\n  onBasicTextChange = (basicValue) => {\n    this.setState({ basicValue });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Input\n          status='primary'\n          placeholder='Primary'\n          value={this.state.primaryValue}\n          onChangeText={this.onPrimaryTextChange}\n        />\n        <Input\n          status='success'\n          placeholder='Success'\n          value={this.state.successValue}\n          onChangeText={this.onSuccessTextChange}\n        />\n        <Input\n          status='info'\n          placeholder='Info'\n          value={this.state.infoValue}\n          onChangeText={this.onInfoTextChange}\n        />\n        <Input\n          status='warning'\n          placeholder='Warning'\n          value={this.state.warningValue}\n          onChangeText={this.onWarningTextChange}\n        />\n        <Input\n          status='danger'\n          placeholder='Danger'\n          value={this.state.dangerValue}\n          onChangeText={this.onDangerTextChange}\n        />\n        <Input\n          status='basic'\n          placeholder='Basic'\n          value={this.state.basicValue}\n          onChangeText={this.onBasicTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/input/inputStatus.component.tsx",
    "name": "InputStatus"
  },
  {
    "code": "import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithCaptionShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  isValidValue = () => {\n    return this.state.value.length >= 6;\n  };\n\n  render() {\n    const isValidInputValue = this.isValidValue();\n    return (\n      <Input\n        status={isValidInputValue ? 'success' : 'danger'}\n        caption={isValidInputValue ? '' : 'Invalid password'}\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/input/inputWithCaption.component.tsx",
    "name": "InputWithCaption"
  },
  {
    "code": "// IMPORTANT: To use Icon component make sure to follow this guide:\n// https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\n\nexport class InputWithIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => {\n    const iconName = this.state.secureTextEntry ? 'eye' : 'eye-off';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        icon={this.renderIcon}\n        secureTextEntry={this.state.secureTextEntry}\n        onIconPress={this.onIconPress}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/input/inputWithIcon.component.tsx",
    "name": "InputWithIcon"
  },
  {
    "code": "import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithLabelShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        label='LABEL'\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/input/inputWithLabel.component.tsx",
    "name": "InputWithLabel"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutInlineStylingShowcase = () => {\n\n  return (\n    <Layout style={[styles.container, styles.additionalContainerStyle]}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  additionalContainerStyle: {\n    borderColor: 'red',\n    borderWidth: 2,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/layout/layoutInlineStyling.component.tsx",
    "name": "LayoutInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutLevelShowcase = () => {\n\n  return (\n    <Layout style={styles.container} level='4'>\n      <Layout style={styles.container} level='3'>\n        <Layout style={styles.container} level='2'>\n          <Layout style={[styles.container, styles.contentContainer]}>\n            <Text>Welcome To React Native UI Kitten!</Text>\n          </Layout>\n        </Layout>\n      </Layout>\n    </Layout>\n\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  contentContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/layout/layoutLevel.component.tsx",
    "name": "LayoutLevel"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutSimpleUsageShowcase = () => {\n\n  return (\n    <Layout style={styles.container}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/layout/layoutSimpleUsage.component.tsx",
    "name": "LayoutSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        style={styles.radio}\n        textStyle={styles.radioText}\n        checked={this.state.checked}\n        text='Place your text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  radio: {\n    width: 32,\n    height: 32,\n  },\n  radioText: { color: 'purple' },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/radio/radioInlineStyling.component.tsx",
    "name": "RadioInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/radio/radioSimpleUsage.component.tsx",
    "name": "RadioSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { Layout, Radio } from 'react-native-ui-kitten';\n\nexport class RadioStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Radio\n          status='primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <Radio\n          status='success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <Radio\n          status='info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <Radio\n          status='warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <Radio\n          status='danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <Radio\n          status='basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/radio/radioStatus.component.tsx",
    "name": "RadioStatus"
  },
  {
    "code": "import React from 'react';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        text={`Checked: ${this.state.checked}`}\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/ui/screen/documentationExamples/radio/radioWithText.component.tsx",
    "name": "RadioWithText"
  },
  {
    "code": "import React, { useState } from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\n\nexport const ToggleInlineStylingShowcase = () => {\n  const [checked, onChange] = useState(false);\n\n  const onToggleValueChange = (value: boolean) => {\n    onChange(value);\n  };\n\n  return (\n    <View style={styles.item}>\n      <Toggle\n        checked={checked}\n        style={styles.item}\n        text='This is a Toggle'\n        textStyle={styles.text}\n        onChange={onToggleValueChange}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  item: {\n    marginBottom: 16,\n  },\n  text: {\n    color: 'red',\n    fontSize: 20,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/toggle/toggleInlineStyling.component.tsx",
    "name": "ToggleInlineStyling"
  },
  {
    "code": "import React, { useState } from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\n\nexport const ToggleSimpleUsageShowcase = () => {\n  const [checked, onChange] = useState(false);\n\n  const onToggleValueChange = (value: boolean) => {\n    onChange(value);\n  };\n\n  return (\n    <View style={styles.item}>\n      <Toggle\n        checked={checked}\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={false}\n        disabled\n        style={styles.item}\n      />\n      <Toggle\n        checked={true}\n        disabled\n        style={styles.item}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  item: {\n    marginBottom: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/toggle/toggleSimpleUsage.component.tsx",
    "name": "ToggleSimpleUsage"
  },
  {
    "code": "import React, { useState } from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\n\nexport const ToggleSizeShowcase = () => {\n  const [checked, onChange] = useState(false);\n\n  const onToggleValueChange = (value: boolean) => {\n    onChange(value);\n  };\n\n  return (\n    <View style={styles.item}>\n      <Toggle\n        checked={checked}\n        size='tiny'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        size='small'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        size='large'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        size='giant'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  item: {\n    marginBottom: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/toggle/toggleSize.component.tsx",
    "name": "ToggleSize"
  },
  {
    "code": "import React, { useState } from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\n\nexport const ToggleStatusShowcase = () => {\n  const [checked, onChange] = useState(false);\n\n  const onToggleValueChange = (value: boolean) => {\n    onChange(value);\n  };\n\n  return (\n    <View style={styles.item}>\n      <Toggle\n        checked={checked}\n        status='primary'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        status='success'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        status='info'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        status='danger'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        status='warning'\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n      <Toggle\n        checked={checked}\n        style={styles.item}\n        onChange={onToggleValueChange}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  item: {\n    marginBottom: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/toggle/toggleStatus.component.tsx",
    "name": "ToggleStatus"
  },
  {
    "code": "import React, { useState } from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\n\nexport const ToggleWithTextShowcase = () => {\n  const [checked, onChange] = useState(false);\n\n  const onToggleValueChange = (value: boolean) => {\n    onChange(value);\n  };\n\n  return (\n    <View style={styles.item}>\n      <Toggle\n        checked={checked}\n        style={styles.item}\n        text='This is a Toggle'\n        onChange={onToggleValueChange}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  item: {\n    marginBottom: 16,\n  },\n});\n",
    "path": "src/playground/src/ui/screen/documentationExamples/toggle/toggleWithText.component.tsx",
    "name": "ToggleWithText"
  }
]